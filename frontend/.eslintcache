[{"C:\\Users\\User\\Desktop\\debug_app\\frontend\\src\\index.js":"1","C:\\Users\\User\\Desktop\\debug_app\\frontend\\src\\routes\\Main.js":"2","C:\\Users\\User\\Desktop\\debug_app\\frontend\\src\\components\\Contents.js":"3","C:\\Users\\User\\Desktop\\debug_app\\frontend\\src\\components\\TitleBar.js":"4","C:\\Users\\User\\Desktop\\debug_app\\frontend\\src\\components\\TabPanel.js":"5","C:\\Users\\User\\Desktop\\debug_app\\frontend\\src\\components\\ConditionDrawer.js":"6","C:\\Users\\User\\Desktop\\debug_app\\frontend\\src\\components\\CustomizedTabs.js":"7","C:\\Users\\User\\Desktop\\debug_app\\frontend\\src\\api\\api.js":"8","C:\\Users\\User\\Desktop\\debug_app\\frontend\\src\\components\\Car.js":"9"},{"size":210,"mtime":1610676091938,"results":"10","hashOfConfig":"11"},{"size":552,"mtime":1612875487792,"results":"12","hashOfConfig":"11"},{"size":1071,"mtime":1612875487787,"results":"13","hashOfConfig":"11"},{"size":7744,"mtime":1613353574611,"results":"14","hashOfConfig":"11"},{"size":2313,"mtime":1613353574610,"results":"15","hashOfConfig":"11"},{"size":5686,"mtime":1612957195725,"results":"16","hashOfConfig":"11"},{"size":2203,"mtime":1611504074939,"results":"17","hashOfConfig":"11"},{"size":311,"mtime":1613386921329,"results":"18","hashOfConfig":"11"},{"size":1055,"mtime":1612875487785,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1ae7qd0",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Desktop\\debug_app\\frontend\\src\\index.js",[],["40","41"],"C:\\Users\\User\\Desktop\\debug_app\\frontend\\src\\routes\\Main.js",[],"C:\\Users\\User\\Desktop\\debug_app\\frontend\\src\\components\\Contents.js",[],"C:\\Users\\User\\Desktop\\debug_app\\frontend\\src\\components\\TitleBar.js",["42"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { \r\n    AppBar, \r\n    Toolbar, \r\n    Typography, \r\n    IconButton, \r\n    Box, \r\n    InputBase,\r\n    Divider,\r\n    Paper,\r\n    CssBaseline,\r\n    useScrollTrigger,\r\n    Zoom,\r\n    Fab,\r\n    SwipeableDrawer,\r\n} from '@material-ui/core';\r\nimport { \r\n    Menu as MenuIcon, \r\n    Search as SearchIcon, \r\n    KeyboardArrowUp as KeyboardArrowUpIcon,\r\n    // MoreVert as MoreIcon \r\n} from '@material-ui/icons';\r\nimport ConditionDrawer from \"./ConditionDrawer\"\r\nimport CustomizedTabs from \"./CustomizedTabs\"\r\nimport { ApiCreate } from '../api/api';\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    toolbar: {\r\n        minHeight: 80,\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(1),\r\n        backgroundColor: '#2e1534',\r\n    },\r\n    title: {\r\n        paddingLeft: theme.spacing(7),\r\n    },\r\n    subtitle: {\r\n        paddingLeft: theme.spacing(7),\r\n        alignSelf: \"flex-end\",\r\n    },\r\n    divider: {\r\n        height: 28,\r\n        margin: 4,\r\n    },\r\n    paper: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        height: '70%',\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n    },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    bottombtn: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction ScrollTop(props) {\r\n    const { children, window } = props;\r\n    const classes = useStyles();\r\n    // Note that you normally won't need to set the window ref as useScrollTrigger\r\n    // will default to window.\r\n    // This is only being set here because the demo is in an iframe.\r\n    const trigger = useScrollTrigger({\r\n        target: window ? window() : undefined,\r\n        disableHysteresis: true,\r\n        threshold: 100,\r\n    });\r\n\r\n    const handleClick = (event) => {\r\n        const anchor = (event.target.ownerDocument || document).querySelector('#back-to-top-anchor');\r\n    \r\n        if (anchor) {\r\n            anchor.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Zoom in={trigger}>\r\n            <div onClick={handleClick} role=\"presentation\" className={classes.bottombtn}>\r\n                {children}\r\n            </div>\r\n        </Zoom>\r\n    );\r\n}\r\n\r\nScrollTop.propTypes = {\r\n    children: PropTypes.element.isRequired,\r\n    /**\r\n     * Injected by the documentation to work in an iframe.\r\n     * You won't need it on your project.\r\n     */\r\n    window: PropTypes.func,\r\n};\r\n\r\nclass TitleBar extends React.Component {\r\n    state = {\r\n        fileName: '',\r\n        drawerOpen: false,\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            fileName: e.target.value.split('\\\\').slice(-1)\r\n        })\r\n        //ApiCreate(this.state.fileName)\r\n    }\r\n    handleToggleDrawer = (open) => (e) => {\r\n        if (e && e.type === 'keydown' && (e.key === 'Tab' || e.key === 'Shift')) {\r\n            return;\r\n        }\r\n        this.setState({ drawerOpen: open });\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n        return (\r\n            <div className={classes.root}>\r\n                <CssBaseline />\r\n                <AppBar position=\"fixed\" >\r\n                    <Toolbar className={classes.toolbar}>\r\n                        <Box display=\"flex\" flexDirection=\"column\" flexGrow={1}>\r\n                            <Box display=\"flex\" className={classes.title} flexGrow={1} paddingBottom={2}>\r\n                                <Box display=\"flex\" flexGrow={1}>\r\n                                    <Typography  variant=\"h4\" noWrap>\r\n                                        Debug\r\n                                    </Typography>\r\n                                    <Typography  variant=\"subtitle2\" className={classes.subtitle} noWrap>\r\n                                        debuging Car Re-identification\r\n                                    </Typography>\r\n                                </Box>\r\n\r\n                                <Box flexGrow={1}>\r\n                                    <Paper component=\"form\" className={classes.paper} display=\"flex\" flexDirection=\"row\">\r\n                                        <input\r\n                                            accept=\"video/*\"\r\n                                            style = {{display: 'none'}}\r\n                                            id=\"upload-file\"\r\n                                            type=\"file\"\r\n                                            onChange= {this.handleChange}\r\n                                        />\r\n                                        <InputBase\r\n                                            className={classes.input}\r\n                                            placeholder={this.state.fileName === '' ? \"Search Video File\" : this.state.fileName}\r\n                                            inputProps={{ 'aria-label': 'Search Video File' }}\r\n                                            disabled = {true}\r\n                                        />\r\n                                        <Divider className={classes.divider} orientation=\"vertical\" />\r\n                                        <label htmlFor=\"upload-file\">\r\n                                            <IconButton aria-label=\"upload video\" color=\"inherit\" component=\"span\">\r\n                                                <SearchIcon />\r\n                                            </IconButton>\r\n                                        </label>\r\n                                    </Paper>                                \r\n                                </Box>\r\n                            </Box>\r\n\r\n                            <Box display=\"flex\" flexDirection=\"row-reverse\" flexGrow={1}>\r\n                                <Box>\r\n                                    <React.Fragment>\r\n                                        <IconButton\r\n                                            edge=\"start\"\r\n                                            color=\"inherit\"\r\n                                            aria-label=\"open drawer\"\r\n                                            onClick={this.handleToggleDrawer(true)}\r\n                                        >\r\n                                            <MenuIcon />\r\n                                        </IconButton>\r\n                                    </React.Fragment>\r\n                                </Box>\r\n                                <Box flexGrow={1}>\r\n                                    <CustomizedTabs handleTabChange = {this.props.handleTabChange} value = {this.props.value}></CustomizedTabs>\r\n                                </Box>\r\n                            </Box>\r\n                        </Box>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                \r\n                <SwipeableDrawer\r\n                    anchor='right'\r\n                    open={this.state.drawerOpen}\r\n                    onClose={this.handleToggleDrawer(false)}\r\n                    onOpen={this.handleToggleDrawer(true)}\r\n                >\r\n                    <ConditionDrawer toggleDrawer = {this.handleToggleDrawer} video = {this.state.fileName}></ConditionDrawer>\r\n                </SwipeableDrawer>\r\n\r\n                <ScrollTop {...this.props}>\r\n                    <Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\r\n                        <KeyboardArrowUpIcon />\r\n                    </Fab>\r\n                </ScrollTop>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(TitleBar);","C:\\Users\\User\\Desktop\\debug_app\\frontend\\src\\components\\TabPanel.js",[],"C:\\Users\\User\\Desktop\\debug_app\\frontend\\src\\components\\ConditionDrawer.js",[],"C:\\Users\\User\\Desktop\\debug_app\\frontend\\src\\components\\CustomizedTabs.js",[],"C:\\Users\\User\\Desktop\\debug_app\\frontend\\src\\api\\api.js",[],"C:\\Users\\User\\Desktop\\debug_app\\frontend\\src\\components\\Car.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":27,"column":10,"nodeType":"49","messageId":"50","endLine":27,"endColumn":19},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'ApiCreate' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]